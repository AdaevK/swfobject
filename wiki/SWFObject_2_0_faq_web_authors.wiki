#summary SWFObject v2.0 FAQ for web authors
#labels Featured

= SWFObject 2.0 FAQ for web authors =

== 1. How can I create a SWF that will encompass 100% of the browser window  ==

The following technique is also known as Full Browser Flash:
  # Set both the width and height of your SWF to 100% in your SWFObject definition
  # Include CSS to get rid of any default margins/padding and set the height of the `html` element, the `body` element and the entire chain of block level HTML elements that your SWF will be nested in to 100%, because Firefox (or: any Gecko based browser) in standards compliant mode (or: using a valid DOCTYPE) interprets percentages in a very strict way (to be precise: the percentage of the height of its parent container, which has to be set explicitly):
{{{
<style type="text/css" media="screen">
  html, body, #containerA, #containerB { height:100%; }
  body { margin:0; padding:0; overflow:hidden; }
</style>
}}}
  # Manage the scaling and alignment of your SWF and the positioning of your SWF's elements, within your ActionScript code, e.g.:
{{{
stage.scaleMode = StageScaleMode.NO_SCALE;
stage.align = StageAlign.TOP_LEFT;

stage.addEventListener(Event.RESIZE, resizeHandler);

function resizeHandler(event:Event):void {
  // center stuff
}
}}}

*NOTE:* For positioning elements always define a resize handler, because a user can resize the browser window and in Internet Explorer (using the _dynamic publishing method_) the stage size is only available on first load. When reloading or revisiting a page it will initially be 0, causing the Flash player to keep on triggering the stage.resize event until it receives its current value

Three code examples can be found in the SWFObject 2.0 test suite:
  * Static publishing: [ http://www.swffix.org/swfobject/testsuite/test_fullbrowserflash.html ]
  * Dynamic publishing: [ http://www.swffix.org/swfobject/testsuite/test_dynamic_fullbrowserflash.html ]
  * Dynamic publishing including min-width, min-height and scrollbars: [ http://www.swffix.org/swfobject/testsuite/test_dynamic_fullbrowserflash_adv.html ]

== 2. Why don't I see Flash content in Internet Explorer on Windows while I do have the required minimal Flash Player version installed? ==

When an install gets corrupted (very often caused by corrupt installers) it is impossible to read the Flash Player version number externally using scripting languages. When using dynamic publishing this results in the display of alternative content, with static publishing we let the object element do its job (it decides whether to show Flash content or alternative content based on its built-in MIME type mechanism) which results in the display of Flash content.

The only way to avoid this issue is by uninstalling the Flash Player using the Adobe uninstaller [ http://www.adobe.com/go/tn_14157 ] and by reinstalling the plug-in via the Adobe Flash Player installation page [ http://www.adobe.com/go/getflashplayer ].

== 3. How can I avoid an infinite express install loop in Firefox on Mac OS X? ==

When you are using Firefox and upgrade your Flash Player via the Adobe express install mechanism on Mac OS X, you may get stuck in an infinite express install loop. This issue is characterized by the following symptoms: the express install dialog flashes for a brief moment, after which you see a white box and a hanging browser connection to fpdownload.macromedia.com.

This issue is caused by corrupt Adobe Flash Player installers on the express install server and only affects Firefox on Mac OS X, as long as Flash Player 9 release 115 is the latest version, because in this browser the Flash plug-in exposes itself externally (for scripting languages) either as version 9.0.47 or 9.0.64 instead of 9.0.115.

The only way to avoid this issue is by reinstalling the Flash Player via the Adobe Flash Player installation page [ http://www.adobe.com/go/getflashplayer ].

== 4. How do I prevent Internet Explorer from crashing when a `<base>` tag is defined? ==

Including a closing `</base>` tag will prevent this bug in Internet Explorer being triggered. Because for HTML 4 compliant pages (a closing `base` tag is forbidden under HTML 4), you could use Internet Explorer conditional comments to keep your HTML valid and still include a closing `base` tag for HTML 4 documents:
{{{
<base href="http://www.yourdomain.com/"><!--[if IE]></base><![endif]-->
}}}

== 5. Why doesn't `fscommand` work in Internet Explorer with _dynamic publishing_ ? ==

A In order to make `fscommand` work in Internet Explorer Adobe recommends to add a block of VBScript to capture and forward the FSCommand calls to JavaScript. However VBScript doesn't work anymore when a Flash movie is inserted using `innerHTML` or `outerHTML`,  as SWFObject's dynamic publishing method does.

Fortunately you can also use JavaScript instead of VBScript to catch the `fscommand` calls. A small downside is that it uses proprietary attributes (which, again, wrapped in conditional comments will keep your code valid). E.g. the following block of VBScript code:
{{{
<SCRIPT LANGUAGE=VBScript>
on error resume next
Sub myCom_FSCommand(ByVal command, ByVal args)
  call myCom_DoFSCommand(command, args)
end sub
</SCRIPT>
}}}

Can be replaced with:
{{{
<!--[if IE]>
<script type="text/javascript" event="FSCommand(command,args)" for="myCom">
  myCom_DoFSCommand(command, args);
</script>
<![endif]-->
}}}

*NOTE:* When publishing for Flash 8 or higher, the use of ExternalInterface is recommended for JavaScript-ActionScript communication over the use of fscommand()

A code example can be found in the SWFObject 2.0 test suite: [ http://www.swffix.org/swfobject/testsuite/test_dynamic_com.html ]

== 6. How do I fix a "Line 56: Out of Memory" error, when unloading a page in Internet Explorer using earlier versions of Flash Player 9 and multiple SWFs using ExternalInterface? ==

This issue was introduced with the release of Flash Player 9, and is fixed in recent versions of Flash Player 9. You can fix it for the earlier versions by adding the following JavaScript code in the head of your (X)HTML page:
{{{
<!--[if IE]>
<script type="text/javascript">
function fixOutOfMemoryError() {
  __flash_unloadHandler = function() {};
  __flash_savedUnloadHandler = function() {};
}
window.attachEvent("onbeforeunload", fixOutOfMemoryError);
</script>
<![endif]-->
}}}

== 7. How do I prevent Internet Explorer from showing an error message when using External Interface and SWF that is inside a `<form>` tag? ==

This technote provides a solution: http://www.adobe.com/go/kb400730